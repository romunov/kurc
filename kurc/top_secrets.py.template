# SECURITY WARNING: keep the secret key used in production secret!
import os

SECRET_KEY = ''

# At https://console.developers.google.com/ create one Web app credential and one Other credential for Gmail (see below)
# Key and Secret can be found there, along with the .json file.
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = ''
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ''
CLIENT_SECRET_FILE = os.path.join('/path/to/client_secret.json')
APPLICATION_NAME = ''  # app name
# http://python-social-auth.readthedocs.io/en/latest/use_cases.html#re-prompt-google-oauth2-users-to-refresh-the-refresh-token
SOCIAL_AUTH_GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {
    'access_type': 'offline',
    'approval_prompt': 'auto'
}

# Django doesn't support multiple scopes per one provider. So, you need to create a new backend for each addition of
# scopes. See GmailOAuth2 in misc_functions
SOCIAL_AUTH_GMAIL_KEY = ''
SOCIAL_AUTH_GMAIL_SECRET = ''
SOCIAL_AUTH_GMAIL_SCOPES = ''  # if more than one, use []
CLIENT_SECRET_FILE_GMAIL = os.path.join('/path/to/client_secret_gmail.json')

# Database
DATABASES = {
    'default': {
        'ENGINE': '',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': ''
    }
}

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# notify manager(s) of 404 errors
SEND_BROKEN_LINK_EMAILS = True
MANAGERS = ('Your Name', 'you@mail.com')
